generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transfer {
  id          String   @id @default(cuid())
  blockNumber String   // Changed: BigInt -> String (universal & reliable)
  txHash      String
  from        String
  to          String
  value       String   // Changed: BigInt -> String (no serialization issues)
  token       Token    @relation(fields: [tokenId], references: [id])
  tokenId     String
  timestamp   DateTime
  gasUsed     String?  // Changed: BigInt? -> String? (consistent with ethers.js)
  gasPrice    String?  // Changed: BigInt? -> String? (works everywhere)
  indexed     Boolean  @default(true)
  tier        String   @default("hot") // "hot", "warm", "cold"
  createdAt   DateTime @default(now())
     
  @@index([from])
  @@index([to])
  @@index([blockNumber])
  @@index([timestamp])
  @@index([tier, timestamp])
}

model Token {
  id           String     @id @default(cuid())
  address      String     @unique
  name         String?
  symbol       String?
  decimals     Int?
  totalSupply  String?    // Changed: BigInt? -> String? (universal compatibility)
  transfers    Transfer[]
  indexingTier String     @default("on-demand") // "popular", "on-demand", "archive"
  isPopular    Boolean    @default(false)
  lastIndexed  DateTime?
  userRequests Int        @default(0)
  createdAt    DateTime   @default(now())
  
  @@index([isPopular])
  @@index([userRequests])
}

model IndexingJob {
  id              String   @id @default(cuid())
  query           String
  config          Json
  status          String   // "active", "paused", "completed", "error"
  priority        String   @default("normal") // "high", "normal", "low"
  tier            String   @default("warm") // "hot", "warm", "cold"
  fromBlock       String?  // Changed: BigInt? -> String? (universal block numbers)
  toBlock         String?  // Changed: BigInt? -> String? (works with all chains)
  addresses       String[]
  events          String[]
  progress        Float    @default(0) // 0-100 completion percentage
  blocksProcessed String   @default("0") // Changed: BigInt -> String (easy counting)
  estimatedBlocks String?  // Changed: BigInt? -> String? (no overflow issues)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  completedAt     DateTime?
  
  @@index([status, priority])
  @@index([tier])
}

model ApiEndpoint {
  id          String   @id @default(cuid())
  path        String   @unique
  query       String
  sqlQuery    String
  parameters  Json
  description String?
  tier        String   @default("warm")
  cacheTime   Int      @default(300)
  createdAt   DateTime @default(now())
  lastUsed    DateTime?
  useCount    Int      @default(0)
  
  @@index([tier])
  @@index([useCount])
}

model IndexingMetrics {
  id              String   @id @default(cuid())
  tokenAddress    String
  blockRange      String   // "18000000-18001000"
  tier            String   // "hot", "warm", "cold"
  transferCount   String   // Changed: BigInt -> String (easy analytics)
  indexingTime    Int      // milliseconds
  storageSize     String   // Changed: BigInt -> String (universal storage tracking)
  queryCount      Int      @default(0)
  lastAccessed    DateTime?
  createdAt       DateTime @default(now())
  
  @@index([tokenAddress])
  @@index([tier])
  @@index([queryCount])
}